#ifndef B_AST_OPS_DATA_GEN_INC_
#define B_AST_OPS_DATA_GEN_INC_
// WARNING: Do not modify this file, it is generated!
// Modify the generating script author_tools/regen_opcodes.pl and its data file
// "author_tools/opcodes" instead!

static const char *b_ast_op_names[] = {
  "time()",          // ast_baseop_time         (ast_opc_baseop)
  "times()",         // ast_baseop_times        (ast_opc_baseop)
  "()",              // ast_baseop_empty        (ast_opc_baseop)
  "gethostent()",    // ast_baseop_gethostent   (ast_opc_baseop)
  "getnetent()",     // ast_baseop_getnetent    (ast_opc_baseop)
  "getservent()",    // ast_baseop_getservent   (ast_opc_baseop)
  "endhostent()",    // ast_baseop_endhostent   (ast_opc_baseop)
  "endnetent()",     // ast_baseop_endnetent    (ast_opc_baseop)
  "getpwent()",      // ast_baseop_getpwent     (ast_opc_baseop)
  "setpwent()",      // ast_baseop_setpwent     (ast_opc_baseop)
  "getgrent()",      // ast_baseop_getgrent     (ast_opc_baseop)
  "setgrent()",      // ast_baseop_setgrent     (ast_opc_baseop)
  "endgrent()",      // ast_baseop_endgrent     (ast_opc_baseop)
  "getlogin()",      // ast_baseop_getlogin     (ast_opc_baseop)
  "endpwent()",      // ast_baseop_endpwent     (ast_opc_baseop)
  "endprotoent()",   // ast_baseop_endprotoend  (ast_opc_baseop)
  "endservent()",    // ast_baseop_endservend   (ast_opc_baseop)
  "getprotoent()",   // ast_baseop_getprotoend  (ast_opc_baseop)
  "wait()",          // ast_baseop_wait         (ast_opc_baseop)
  "getppid()",       // ast_baseop_getppid      (ast_opc_baseop)
  "anon CV constr",  // ast_baseop_anoncode     (ast_opc_baseop)
  "fork()",          // ast_baseop_fork         (ast_opc_baseop)
  "const meth lkup", // ast_baseop_method_named (ast_opc_baseop)
  "continue",        // ast_baseop_continue     (ast_opc_baseop)
  "break",           // ast_baseop_break        (ast_opc_baseop)
  "pushmark",        // ast_baseop_pushmark     (ast_opc_baseop)
  "localtime()",     // ast_unop_localtime      (ast_opc_unop)
  "gmtime()",        // ast_unop_gmtime         (ast_opc_unop)
  "alarm()",         // ast_unop_alarm          (ast_opc_unop)
  "sleep()",         // ast_unop_sleep          (ast_opc_unop)
  "unary -",         // ast_unop_negate         (ast_opc_unop)
  "sin",             // ast_unop_sin            (ast_opc_unop)
  "cos",             // ast_unop_cos            (ast_opc_unop)
  "abs",             // ast_unop_abs            (ast_opc_unop)
  "sqrt",            // ast_unop_sqrt           (ast_opc_unop)
  "log",             // ast_unop_log            (ast_opc_unop)
  "exp",             // ast_unop_exp            (ast_opc_unop)
  "int",             // ast_unop_perl_int       (ast_opc_unop)
  "~",               // ast_unop_bitwise_not    (ast_opc_unop)
  "!",               // ast_unop_bool_not       (ast_opc_unop)
  "defined",         // ast_unop_defined        (ast_opc_unop)
  "rand",            // ast_unop_rand           (ast_opc_unop)
  "srand",           // ast_unop_srand          (ast_opc_unop)
  "hex",             // ast_unop_hex            (ast_opc_unop)
  "oct",             // ast_unop_oct            (ast_opc_unop)
  "length",          // ast_unop_length         (ast_opc_unop)
  "ord",             // ast_unop_ord            (ast_opc_unop)
  "chr",             // ast_unop_chr            (ast_opc_unop)
  "lc",              // ast_unop_lc             (ast_opc_unop)
  "uc",              // ast_unop_uc             (ast_opc_unop)
  "fc",              // ast_unop_fc             (ast_opc_unop)
  "lcfirst",         // ast_unop_lcfirst        (ast_opc_unop)
  "ucfirst",         // ast_unop_ucfirst        (ast_opc_unop)
  "quotemeta",       // ast_unop_quotemeta      (ast_opc_unop)
  "++()",            // ast_unop_preinc         (ast_opc_unop)
  "()++",            // ast_unop_postinc        (ast_opc_unop)
  "--()",            // ast_unop_predec         (ast_opc_unop)
  "()--",            // ast_unop_postdec        (ast_opc_unop)
  "undef()",         // ast_unop_undef          (ast_opc_unop)
  "sv_deref",        // ast_unop_sv_deref       (ast_opc_unop)
  "sv_ref",          // ast_unop_sv_ref         (ast_opc_unop)
  "refgen",          // ast_unop_refgen         (ast_opc_unop)
  "av_deref",        // ast_unop_av_deref       (ast_opc_unop)
  "hv_deref",        // ast_unop_hv_deref       (ast_opc_unop)
  "gv_deref",        // ast_unop_gv_deref       (ast_opc_unop)
  "cv_deref",        // ast_unop_cv_deref       (ast_opc_unop)
  "getc",            // ast_unop_getc           (ast_opc_unop)
  "array_len",       // ast_unop_array_len      (ast_opc_unop)
  "shift()",         // ast_unop_array_shift    (ast_opc_unop)
  "pop()",           // ast_unop_array_pop      (ast_opc_unop)
  "caller()",        // ast_unop_caller         (ast_opc_unop)
  "wantarray()",     // ast_unop_wantarray      (ast_opc_unop)
  "study()",         // ast_unop_study          (ast_opc_unop)
  "chdir()",         // ast_unop_chdir          (ast_opc_unop)
  "chroot()",        // ast_unop_chroot         (ast_opc_unop)
  "readlink()",      // ast_unop_readlink       (ast_opc_unop)
  "rmdir()",         // ast_unop_rmdir          (ast_opc_unop)
  "stat()",          // ast_unop_stat           (ast_opc_unop)
  "lstat()",         // ast_unop_lstat          (ast_opc_unop)
  "ft -R",           // ast_unop_ft_rread       (ast_opc_unop)
  "ft -W",           // ast_unop_ft_rwrite      (ast_opc_unop)
  "ft -X",           // ast_unop_ft_rexec       (ast_opc_unop)
  "ft -r",           // ast_unop_ft_eread       (ast_opc_unop)
  "ft -w",           // ast_unop_ft_ewrite      (ast_opc_unop)
  "ft -x",           // ast_unop_ft_eexec       (ast_opc_unop)
  "ft -e",           // ast_unop_ft_is          (ast_opc_unop)
  "ft -s",           // ast_unop_ft_size        (ast_opc_unop)
  "ft -M",           // ast_unop_ft_mtime       (ast_opc_unop)
  "ft -A",           // ast_unop_ft_atime       (ast_opc_unop)
  "ft -C",           // ast_unop_ft_ctime       (ast_opc_unop)
  "ft -O",           // ast_unop_ft_rowned      (ast_opc_unop)
  "ft -o",           // ast_unop_ft_eowned      (ast_opc_unop)
  "ft -z",           // ast_unop_ft_zero        (ast_opc_unop)
  "ft -S",           // ast_unop_ft_sock        (ast_opc_unop)
  "ft -c",           // ast_unop_ft_chr         (ast_opc_unop)
  "ft -b",           // ast_unop_ft_blk         (ast_opc_unop)
  "ft -f",           // ast_unop_ft_file        (ast_opc_unop)
  "ft -d",           // ast_unop_ft_dir         (ast_opc_unop)
  "ft -p",           // ast_unop_ft_pipe        (ast_opc_unop)
  "ft -u",           // ast_unop_ft_suid        (ast_opc_unop)
  "ft -g",           // ast_unop_ft_sgid        (ast_opc_unop)
  "ft -k",           // ast_unop_ft_svtx        (ast_opc_unop)
  "ft -l",           // ast_unop_ft_link        (ast_opc_unop)
  "ft -t",           // ast_unop_ft_tty         (ast_opc_unop)
  "ft -T",           // ast_unop_ft_text        (ast_opc_unop)
  "ft -B",           // ast_unop_ft_binary      (ast_opc_unop)
  "exit()",          // ast_unop_exit           (ast_opc_unop)
  "backticks",       // ast_unop_backtick       (ast_opc_unop)
  "pos()",           // ast_unop_pos            (ast_opc_unop)
  "ref()",           // ast_unop_ref            (ast_opc_unop)
  "prototype()",     // ast_unop_prototype      (ast_opc_unop)
  "keys(%)",         // ast_unop_hash_keys      (ast_opc_unop)
  "keys(@)",         // ast_unop_ary_keys       (ast_opc_unop)
  "keys(ref)",       // ast_unop_ref_keys       (ast_opc_unop)
  "values(%)",       // ast_unop_hash_values    (ast_opc_unop)
  "values(@)",       // ast_unop_ary_values     (ast_opc_unop)
  "values(ref)",     // ast_unop_ref_values     (ast_opc_unop)
  "each(%)",         // ast_unop_hash_each      (ast_opc_unop)
  "each(@)",         // ast_unop_ary_each       (ast_opc_unop)
  "each(ref)",       // ast_unop_ref_each       (ast_opc_unop)
  "fileno()",        // ast_unop_fileno         (ast_opc_unop)
  "umask()",         // ast_unop_umask          (ast_opc_unop)
  "close()",         // ast_unop_close          (ast_opc_unop)
  "tied()",          // ast_unop_tied           (ast_opc_unop)
  "untie()",         // ast_unop_untie          (ast_opc_unop)
  "eof()",           // ast_unop_eof            (ast_opc_unop)
  "tell()",          // ast_unop_tell           (ast_opc_unop)
  "select(FH)",      // ast_unop_fh_select      (ast_opc_unop)
  "gethostbyname",   // ast_unop_gethostbyname  (ast_opc_unop)
  "sethostent()",    // ast_unop_sethostent     (ast_opc_unop)
  "setnetent()",     // ast_unop_setnetent      (ast_opc_unop)
  "getpwnam()",      // ast_unop_getpwnam       (ast_opc_unop)
  "getpwuid()",      // ast_unop_getpwuid       (ast_opc_unop)
  "setprotoent()",   // ast_unop_setprotoent    (ast_opc_unop)
  "getgrnam()",      // ast_unop_getgrnam       (ast_opc_unop)
  "getgrgid()",      // ast_unop_getgrgid       (ast_opc_unop)
  "setservent()",    // ast_unop_setservent     (ast_opc_unop)
  "getnetbyname()",  // ast_unop_getnetbyname   (ast_opc_unop)
  "getprotobyname",  // ast_unop_getprotobyname (ast_opc_unop)
  "getprotobynum",   // ast_unop_getprotobynum  (ast_opc_unop)
  "reset()",         // ast_unop_reset          (ast_opc_unop)
  "dump()",          // ast_unop_dump           (ast_opc_unop)
  "goto()",          // ast_unop_goto           (ast_opc_unop)
  "dbmclose()",      // ast_unop_dbmclose       (ast_opc_unop)
  "readdir()",       // ast_unop_readdir        (ast_opc_unop)
  "telldir()",       // ast_unop_telldir        (ast_opc_unop)
  "rewinddir()",     // ast_unop_rewinddir      (ast_opc_unop)
  "closedir()",      // ast_unop_closedir       (ast_opc_unop)
  "getsockname()",   // ast_unop_getsockname    (ast_opc_unop)
  "getpeername()",   // ast_unop_getpeername    (ast_opc_unop)
  "getpgrp()",       // ast_unop_getpgrp        (ast_opc_unop)
  "lock()",          // ast_unop_lock           (ast_opc_unop)
  "readlone()",      // ast_unop_readline       (ast_opc_unop)
  "require()",       // ast_unop_require        (ast_opc_unop)
  "do 'file'",       // ast_unop_dofile         (ast_opc_unop)
  "dyn meth lkup",   // ast_unop_method         (ast_opc_unop)
  "default{}",       // ast_unop_default        (ast_opc_unop)
  "+",               // ast_binop_add           (ast_opc_binop)
  "-",               // ast_binop_subtract      (ast_opc_binop)
  "*",               // ast_binop_multiply      (ast_opc_binop)
  "/",               // ast_binop_divide        (ast_opc_binop)
  "%",               // ast_binop_modulo        (ast_opc_binop)
  "atan2",           // ast_binop_atan2         (ast_opc_binop)
  "pow",             // ast_binop_pow           (ast_opc_binop)
  "<<",              // ast_binop_left_shift    (ast_opc_binop)
  ">>",              // ast_binop_right_shift   (ast_opc_binop)
  "&",               // ast_binop_bitwise_and   (ast_opc_binop)
  "|",               // ast_binop_bitwise_or    (ast_opc_binop)
  "^",               // ast_binop_bitwise_xor   (ast_opc_binop)
  "==",              // ast_binop_num_eq        (ast_opc_binop)
  "!=",              // ast_binop_num_ne        (ast_opc_binop)
  "<",               // ast_binop_num_lt        (ast_opc_binop)
  "<=",              // ast_binop_num_le        (ast_opc_binop)
  ">",               // ast_binop_num_gt        (ast_opc_binop)
  ">=",              // ast_binop_num_ge        (ast_opc_binop)
  "<=>",             // ast_binop_num_cmp       (ast_opc_binop)
  "eq",              // ast_binop_str_eq        (ast_opc_binop)
  "ne",              // ast_binop_str_ne        (ast_opc_binop)
  "lt",              // ast_binop_str_lt        (ast_opc_binop)
  "le",              // ast_binop_str_le        (ast_opc_binop)
  "gt",              // ast_binop_str_gt        (ast_opc_binop)
  "ge",              // ast_binop_str_ge        (ast_opc_binop)
  "cmp",             // ast_binop_str_cmp       (ast_opc_binop)
  "concat",          // ast_binop_concat        (ast_opc_binop)
  "sassign",         // ast_binop_sassign       (ast_opc_binop)
  "aassign",         // ast_binop_aassign       (ast_opc_binop)
  "list slice",      // ast_binop_list_slice    (ast_opc_binop)
  "array slice",     // ast_binop_array_slice   (ast_opc_binop)
  "array access",    // ast_binop_aelem         (ast_opc_binop)
  "hash access",     // ast_binop_helem         (ast_opc_binop)
  "bless()",         // ast_binop_bless         (ast_opc_binop)
  "crypt()",         // ast_binop_crypt         (ast_opc_binop)
  "rename()",        // ast_binop_rename        (ast_opc_binop)
  "link()",          // ast_binop_link          (ast_opc_binop)
  "symlink()",       // ast_binop_symlink       (ast_opc_binop)
  "mkdir()",         // ast_binop_mkdir         (ast_opc_binop)
  "range()",         // ast_binop_range         (ast_opc_binop)
  "exists()",        // ast_binop_exists        (ast_opc_binop)
  "delete()",        // ast_binop_delete        (ast_opc_binop)
  "binmode()",       // ast_binop_binmode       (ast_opc_binop)
  "truncate()",      // ast_binop_truncate      (ast_opc_binop)
  "flock()",         // ast_binop_flock         (ast_opc_binop)
  "gethostbyaddr",   // ast_binop_gethostbyaddr (ast_opc_binop)
  "getnetbyaddr()",  // ast_binop_getnetbyaddr  (ast_opc_binop)
  "getservbyname",   // ast_binop_getservbyname (ast_opc_binop)
  "getservbyport",   // ast_binop_getservbyport (ast_opc_binop)
  "opendir()",       // ast_binop_opendir       (ast_opc_binop)
  "seekdir()",       // ast_binop_seekdir       (ast_opc_binop)
  "bind()",          // ast_binop_bind          (ast_opc_binop)
  "connect()",       // ast_binop_connect       (ast_opc_binop)
  "listen()",        // ast_binop_listen        (ast_opc_binop)
  "accept()",        // ast_binop_accept        (ast_opc_binop)
  "shutdown()",      // ast_binop_shutdown      (ast_opc_binop)
  "msgget()",        // ast_binop_msgget        (ast_opc_binop)
  "semop()",         // ast_binop_semop         (ast_opc_binop)
  "pipe()",          // ast_binop_pipe          (ast_opc_binop)
  "waitpid()",       // ast_binop_waitpid       (ast_opc_binop)
  "setpgrp()",       // ast_binop_setpgrp       (ast_opc_binop)
  "getpriority()",   // ast_binop_getpriority   (ast_opc_binop)
  "formline()",      // ast_binop_formline      (ast_opc_binop)
  "*FOO{THING}",     // ast_binop_glob_element  (ast_opc_binop)
  "~~",              // ast_binop_smartmatch    (ast_opc_binop)
  "glob()",          // ast_binop_glob          (ast_opc_binop)
  "given(){}",       // ast_binop_given         (ast_opc_binop)
  "when(){}",        // ast_binop_when          (ast_opc_binop)
  "&&",              // ast_logop_bool_and      (ast_opc_logop)
  "||",              // ast_logop_bool_or       (ast_opc_logop)
  "//",              // ast_logop_definedor     (ast_opc_logop)
  "?:",              // ast_logop_ternary       (ast_opc_logop)
  "substr",          // ast_listop_substr       (ast_opc_listop)
  "chop",            // ast_listop_chop         (ast_opc_listop)
  "chomp",           // ast_listop_chomp        (ast_opc_listop)
  "vec",             // ast_listop_vec          (ast_opc_listop)
  "sprintf",         // ast_listop_sprintf      (ast_opc_listop)
  "printf",          // ast_listop_printf       (ast_opc_listop)
  "print",           // ast_listop_print        (ast_opc_listop)
  "say",             // ast_listop_say          (ast_opc_listop)
  "join",            // ast_listop_join         (ast_opc_listop)
  "read",            // ast_listop_read         (ast_opc_listop)
  "list_to_scalar",  // ast_listop_list2scalar  (ast_opc_listop)
  "return",          // ast_listop_return       (ast_opc_listop)
  "reverse",         // ast_listop_reverse      (ast_opc_listop)
  "unshift()",       // ast_listop_unshift      (ast_opc_listop)
  "push()",          // ast_listop_push         (ast_opc_listop)
  "splice()",        // ast_listop_splice       (ast_opc_listop)
  "anon array []",   // ast_listop_anonlist     (ast_opc_listop)
  "anon hash {}",    // ast_listop_anonhash     (ast_opc_listop)
  "chown()",         // ast_listop_chown        (ast_opc_listop)
  "unlink()",        // ast_listop_unlink       (ast_opc_listop)
  "chmod()",         // ast_listop_chmod        (ast_opc_listop)
  "utime()",         // ast_listop_utime        (ast_opc_listop)
  "split()",         // ast_listop_split        (ast_opc_listop)
  "warn()",          // ast_listop_warn         (ast_opc_listop)
  "regexp match",    // ast_listop_match        (ast_opc_listop)
  "regexp subst",    // ast_listop_subst        (ast_opc_listop)
  "index()",         // ast_listop_index        (ast_opc_listop)
  "rindex()",        // ast_listop_rindex       (ast_opc_listop)
  "x operator",      // ast_listop_repeat       (ast_opc_listop)
  "execute-once",    // ast_listop_once         (ast_opc_listop)
  "pack()",          // ast_listop_pack         (ast_opc_listop)
  "unpack()",        // ast_listop_unpack       (ast_opc_listop)
  "open()",          // ast_listop_open         (ast_opc_listop)
  "seek()",          // ast_listop_seek         (ast_opc_listop)
  "sysopen()",       // ast_listop_sysopen      (ast_opc_listop)
  "sysseek()",       // ast_listop_sysseek      (ast_opc_listop)
  "syswrite()",      // ast_listop_syswrite     (ast_opc_listop)
  "sysread()",       // ast_listop_sysread      (ast_opc_listop)
  "die()",           // ast_listop_die          (ast_opc_listop)
  "ioctl()",         // ast_listop_ioctl        (ast_opc_listop)
  "fcntl()",         // ast_listop_fcntl        (ast_opc_listop)
  "select syscall",  // ast_listop_sysselect    (ast_opc_listop)
  "gen. syscall",    // ast_listop_syscall      (ast_opc_listop)
  "dbmopen",         // ast_listop_dbmopen      (ast_opc_listop)
  "send()",          // ast_listop_send         (ast_opc_listop)
  "recv()",          // ast_listop_recv         (ast_opc_listop)
  "socket()",        // ast_listop_socket       (ast_opc_listop)
  "socketpair()",    // ast_listop_socketpair   (ast_opc_listop)
  "getsockopt()",    // ast_listop_getsockopt   (ast_opc_listop)
  "setsockopt()",    // ast_listop_setsockopt   (ast_opc_listop)
  "shmget()",        // ast_listop_shmget       (ast_opc_listop)
  "shmctl()",        // ast_listop_shmctl       (ast_opc_listop)
  "shmread()",       // ast_listop_shmread      (ast_opc_listop)
  "shmwrite()",      // ast_listop_shmwrite     (ast_opc_listop)
  "msgctl()",        // ast_listop_msgctl       (ast_opc_listop)
  "msgsnd()",        // ast_listop_msgsnd       (ast_opc_listop)
  "msgrcv()",        // ast_listop_msgrcv       (ast_opc_listop)
  "semget()",        // ast_listop_semget       (ast_opc_listop)
  "semctl()",        // ast_listop_semctl       (ast_opc_listop)
  "setpriority()",   // ast_listop_setpriority  (ast_opc_listop)
  "kill()",          // ast_listop_kill         (ast_opc_listop)
  "system()",        // ast_listop_system       (ast_opc_listop)
  "exec()",          // ast_listop_exec         (ast_opc_listop)
  "hash slice",      // ast_listop_hash_slice   (ast_opc_listop)
  "scope",           // ast_op_scope            (ast_opc_block)
};

static unsigned int b_ast_op_flags[] = {
  0,                                                  // ast_baseop_time         (ast_opc_baseop)
  0,                                                  // ast_baseop_times        (ast_opc_baseop)
  0,                                                  // ast_baseop_empty        (ast_opc_baseop)
  0,                                                  // ast_baseop_gethostent   (ast_opc_baseop)
  0,                                                  // ast_baseop_getnetent    (ast_opc_baseop)
  0,                                                  // ast_baseop_getservent   (ast_opc_baseop)
  0,                                                  // ast_baseop_endhostent   (ast_opc_baseop)
  0,                                                  // ast_baseop_endnetent    (ast_opc_baseop)
  0,                                                  // ast_baseop_getpwent     (ast_opc_baseop)
  0,                                                  // ast_baseop_setpwent     (ast_opc_baseop)
  0,                                                  // ast_baseop_getgrent     (ast_opc_baseop)
  0,                                                  // ast_baseop_setgrent     (ast_opc_baseop)
  0,                                                  // ast_baseop_endgrent     (ast_opc_baseop)
  0,                                                  // ast_baseop_getlogin     (ast_opc_baseop)
  0,                                                  // ast_baseop_endpwent     (ast_opc_baseop)
  0,                                                  // ast_baseop_endprotoend  (ast_opc_baseop)
  0,                                                  // ast_baseop_endservend   (ast_opc_baseop)
  0,                                                  // ast_baseop_getprotoend  (ast_opc_baseop)
  0,                                                  // ast_baseop_wait         (ast_opc_baseop)
  0,                                                  // ast_baseop_getppid      (ast_opc_baseop)
  0,                                                  // ast_baseop_anoncode     (ast_opc_baseop)
  0,                                                  // ast_baseop_fork         (ast_opc_baseop)
  0,                                                  // ast_baseop_method_named (ast_opc_baseop)
  0,                                                  // ast_baseop_continue     (ast_opc_baseop)
  0,                                                  // ast_baseop_break        (ast_opc_baseop)
  0,                                                  // ast_baseop_pushmark     (ast_opc_baseop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_localtime      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_gmtime         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_alarm          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_sleep          (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_negate         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_sin            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_cos            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_abs            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_sqrt           (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_log            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_exp            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL|B_ASTf_OVERLOAD,               // ast_unop_perl_int       (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_bitwise_not    (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_bool_not       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_defined        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_rand           (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_srand          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_hex            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_oct            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_length         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ord            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_chr            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_lc             (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_uc             (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_fc             (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_lcfirst        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ucfirst        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_quotemeta      (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_preinc         (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_postinc        (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_predec         (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_postdec        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_undef          (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_sv_deref       (ast_opc_unop)
  0,                                                  // ast_unop_sv_ref         (ast_opc_unop)
  0,                                                  // ast_unop_refgen         (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_av_deref       (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_hv_deref       (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_gv_deref       (ast_opc_unop)
  B_ASTf_OVERLOAD,                                    // ast_unop_cv_deref       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_getc           (ast_opc_unop)
  0,                                                  // ast_unop_array_len      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_array_shift    (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_array_pop      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_caller         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_wantarray      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_study          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_chdir          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_chroot         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_readlink       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_rmdir          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_stat           (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_lstat          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_rread       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_rwrite      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_rexec       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_eread       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_ewrite      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_eexec       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_is          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_size        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_mtime       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_atime       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_ctime       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_rowned      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_eowned      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_zero        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_sock        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_chr         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_blk         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_file        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_dir         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_pipe        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_suid        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_sgid        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_svtx        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_link        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_tty         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_text        (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ft_binary      (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_exit           (ast_opc_unop)
  0,                                                  // ast_unop_backtick       (ast_opc_unop)
  0,                                                  // ast_unop_pos            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_ref            (ast_opc_unop)
  0,                                                  // ast_unop_prototype      (ast_opc_unop)
  0,                                                  // ast_unop_hash_keys      (ast_opc_unop)
  0,                                                  // ast_unop_ary_keys       (ast_opc_unop)
  0,                                                  // ast_unop_ref_keys       (ast_opc_unop)
  0,                                                  // ast_unop_hash_values    (ast_opc_unop)
  0,                                                  // ast_unop_ary_values     (ast_opc_unop)
  0,                                                  // ast_unop_ref_values     (ast_opc_unop)
  0,                                                  // ast_unop_hash_each      (ast_opc_unop)
  0,                                                  // ast_unop_ary_each       (ast_opc_unop)
  0,                                                  // ast_unop_ref_each       (ast_opc_unop)
  0,                                                  // ast_unop_fileno         (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_umask          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_close          (ast_opc_unop)
  0,                                                  // ast_unop_tied           (ast_opc_unop)
  0,                                                  // ast_unop_untie          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_eof            (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_tell           (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_fh_select      (ast_opc_unop)
  0,                                                  // ast_unop_gethostbyname  (ast_opc_unop)
  0,                                                  // ast_unop_sethostent     (ast_opc_unop)
  0,                                                  // ast_unop_setnetent      (ast_opc_unop)
  0,                                                  // ast_unop_getpwnam       (ast_opc_unop)
  0,                                                  // ast_unop_getpwuid       (ast_opc_unop)
  0,                                                  // ast_unop_setprotoent    (ast_opc_unop)
  0,                                                  // ast_unop_getgrnam       (ast_opc_unop)
  0,                                                  // ast_unop_getgrgid       (ast_opc_unop)
  0,                                                  // ast_unop_setservent     (ast_opc_unop)
  0,                                                  // ast_unop_getnetbyname   (ast_opc_unop)
  0,                                                  // ast_unop_getprotobyname (ast_opc_unop)
  0,                                                  // ast_unop_getprotobynum  (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_reset          (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_dump           (ast_opc_unop)
  0,                                                  // ast_unop_goto           (ast_opc_unop)
  0,                                                  // ast_unop_dbmclose       (ast_opc_unop)
  0,                                                  // ast_unop_readdir        (ast_opc_unop)
  0,                                                  // ast_unop_telldir        (ast_opc_unop)
  0,                                                  // ast_unop_rewinddir      (ast_opc_unop)
  0,                                                  // ast_unop_closedir       (ast_opc_unop)
  0,                                                  // ast_unop_getsockname    (ast_opc_unop)
  0,                                                  // ast_unop_getpeername    (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_getpgrp        (ast_opc_unop)
  0,                                                  // ast_unop_lock           (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_readline       (ast_opc_unop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_unop_require        (ast_opc_unop)
  0,                                                  // ast_unop_dofile         (ast_opc_unop)
  0,                                                  // ast_unop_method         (ast_opc_unop)
  0,                                                  // ast_unop_default        (ast_opc_unop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_add           (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_subtract      (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_multiply      (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_divide        (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_modulo        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_atan2         (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_pow           (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_left_shift    (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_right_shift   (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_bitwise_and   (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_bitwise_or    (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_bitwise_xor   (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_eq        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_ne        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_lt        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_le        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_gt        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_ge        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_num_cmp       (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_eq        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_ne        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_lt        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_le        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_gt        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_ge        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_str_cmp       (ast_opc_binop)
  B_ASTf_HAS_ASSIGNMENT_FORM|B_ASTf_OVERLOAD,         // ast_binop_concat        (ast_opc_binop)
  B_ASTf_OVERLOAD,                                    // ast_binop_sassign       (ast_opc_binop)
  0,                                                  // ast_binop_aassign       (ast_opc_binop)
  0,                                                  // ast_binop_list_slice    (ast_opc_binop)
  0,                                                  // ast_binop_array_slice   (ast_opc_binop)
  0,                                                  // ast_binop_aelem         (ast_opc_binop)
  0,                                                  // ast_binop_helem         (ast_opc_binop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_binop_bless         (ast_opc_binop)
  0,                                                  // ast_binop_crypt         (ast_opc_binop)
  0,                                                  // ast_binop_rename        (ast_opc_binop)
  0,                                                  // ast_binop_link          (ast_opc_binop)
  0,                                                  // ast_binop_symlink       (ast_opc_binop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_binop_mkdir         (ast_opc_binop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_binop_range         (ast_opc_binop)
  0,                                                  // ast_binop_exists        (ast_opc_binop)
  0,                                                  // ast_binop_delete        (ast_opc_binop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_binop_binmode       (ast_opc_binop)
  0,                                                  // ast_binop_truncate      (ast_opc_binop)
  0,                                                  // ast_binop_flock         (ast_opc_binop)
  0,                                                  // ast_binop_gethostbyaddr (ast_opc_binop)
  0,                                                  // ast_binop_getnetbyaddr  (ast_opc_binop)
  0,                                                  // ast_binop_getservbyname (ast_opc_binop)
  0,                                                  // ast_binop_getservbyport (ast_opc_binop)
  0,                                                  // ast_binop_opendir       (ast_opc_binop)
  0,                                                  // ast_binop_seekdir       (ast_opc_binop)
  0,                                                  // ast_binop_bind          (ast_opc_binop)
  0,                                                  // ast_binop_connect       (ast_opc_binop)
  0,                                                  // ast_binop_listen        (ast_opc_binop)
  0,                                                  // ast_binop_accept        (ast_opc_binop)
  0,                                                  // ast_binop_shutdown      (ast_opc_binop)
  0,                                                  // ast_binop_msgget        (ast_opc_binop)
  0,                                                  // ast_binop_semop         (ast_opc_binop)
  0,                                                  // ast_binop_pipe          (ast_opc_binop)
  0,                                                  // ast_binop_waitpid       (ast_opc_binop)
  B_ASTf_KIDS_OPTIONAL,                               // ast_binop_setpgrp       (ast_opc_binop)
  0,                                                  // ast_binop_getpriority   (ast_opc_binop)
  0,                                                  // ast_binop_formline      (ast_opc_binop)
  0,                                                  // ast_binop_glob_element  (ast_opc_binop)
  0,                                                  // ast_binop_smartmatch    (ast_opc_binop)
  0,                                                  // ast_binop_glob          (ast_opc_binop)
  0,                                                  // ast_binop_given         (ast_opc_binop)
  0,                                                  // ast_binop_when          (ast_opc_binop)
  B_ASTf_KIDS_CONDITIONAL|B_ASTf_HAS_ASSIGNMENT_FORM, // ast_logop_bool_and      (ast_opc_logop)
  B_ASTf_KIDS_CONDITIONAL|B_ASTf_HAS_ASSIGNMENT_FORM, // ast_logop_bool_or       (ast_opc_logop)
  B_ASTf_KIDS_CONDITIONAL|B_ASTf_HAS_ASSIGNMENT_FORM, // ast_logop_definedor     (ast_opc_logop)
  B_ASTf_KIDS_CONDITIONAL,                            // ast_logop_ternary       (ast_opc_logop)
  0,                                                  // ast_listop_substr       (ast_opc_listop)
  0,                                                  // ast_listop_chop         (ast_opc_listop)
  0,                                                  // ast_listop_chomp        (ast_opc_listop)
  0,                                                  // ast_listop_vec          (ast_opc_listop)
  0,                                                  // ast_listop_sprintf      (ast_opc_listop)
  B_ASTf_OPTIONAL_TERM,                               // ast_listop_printf       (ast_opc_listop)
  B_ASTf_OPTIONAL_TERM,                               // ast_listop_print        (ast_opc_listop)
  B_ASTf_OPTIONAL_TERM,                               // ast_listop_say          (ast_opc_listop)
  0,                                                  // ast_listop_join         (ast_opc_listop)
  0,                                                  // ast_listop_read         (ast_opc_listop)
  0,                                                  // ast_listop_list2scalar  (ast_opc_listop)
  0,                                                  // ast_listop_return       (ast_opc_listop)
  0,                                                  // ast_listop_reverse      (ast_opc_listop)
  0,                                                  // ast_listop_unshift      (ast_opc_listop)
  0,                                                  // ast_listop_push         (ast_opc_listop)
  0,                                                  // ast_listop_splice       (ast_opc_listop)
  0,                                                  // ast_listop_anonlist     (ast_opc_listop)
  0,                                                  // ast_listop_anonhash     (ast_opc_listop)
  0,                                                  // ast_listop_chown        (ast_opc_listop)
  0,                                                  // ast_listop_unlink       (ast_opc_listop)
  0,                                                  // ast_listop_chmod        (ast_opc_listop)
  0,                                                  // ast_listop_utime        (ast_opc_listop)
  0,                                                  // ast_listop_split        (ast_opc_listop)
  0,                                                  // ast_listop_warn         (ast_opc_listop)
  0,                                                  // ast_listop_match        (ast_opc_listop)
  0,                                                  // ast_listop_subst        (ast_opc_listop)
  0,                                                  // ast_listop_index        (ast_opc_listop)
  0,                                                  // ast_listop_rindex       (ast_opc_listop)
  0,                                                  // ast_listop_repeat       (ast_opc_listop)
  0,                                                  // ast_listop_once         (ast_opc_listop)
  0,                                                  // ast_listop_pack         (ast_opc_listop)
  0,                                                  // ast_listop_unpack       (ast_opc_listop)
  0,                                                  // ast_listop_open         (ast_opc_listop)
  0,                                                  // ast_listop_seek         (ast_opc_listop)
  0,                                                  // ast_listop_sysopen      (ast_opc_listop)
  0,                                                  // ast_listop_sysseek      (ast_opc_listop)
  0,                                                  // ast_listop_syswrite     (ast_opc_listop)
  0,                                                  // ast_listop_sysread      (ast_opc_listop)
  0,                                                  // ast_listop_die          (ast_opc_listop)
  0,                                                  // ast_listop_ioctl        (ast_opc_listop)
  0,                                                  // ast_listop_fcntl        (ast_opc_listop)
  0,                                                  // ast_listop_sysselect    (ast_opc_listop)
  0,                                                  // ast_listop_syscall      (ast_opc_listop)
  0,                                                  // ast_listop_dbmopen      (ast_opc_listop)
  0,                                                  // ast_listop_send         (ast_opc_listop)
  0,                                                  // ast_listop_recv         (ast_opc_listop)
  0,                                                  // ast_listop_socket       (ast_opc_listop)
  0,                                                  // ast_listop_socketpair   (ast_opc_listop)
  0,                                                  // ast_listop_getsockopt   (ast_opc_listop)
  0,                                                  // ast_listop_setsockopt   (ast_opc_listop)
  0,                                                  // ast_listop_shmget       (ast_opc_listop)
  0,                                                  // ast_listop_shmctl       (ast_opc_listop)
  0,                                                  // ast_listop_shmread      (ast_opc_listop)
  0,                                                  // ast_listop_shmwrite     (ast_opc_listop)
  0,                                                  // ast_listop_msgctl       (ast_opc_listop)
  0,                                                  // ast_listop_msgsnd       (ast_opc_listop)
  0,                                                  // ast_listop_msgrcv       (ast_opc_listop)
  0,                                                  // ast_listop_semget       (ast_opc_listop)
  0,                                                  // ast_listop_semctl       (ast_opc_listop)
  0,                                                  // ast_listop_setpriority  (ast_opc_listop)
  0,                                                  // ast_listop_kill         (ast_opc_listop)
  B_ASTf_OPTIONAL_TERM,                               // ast_listop_system       (ast_opc_listop)
  B_ASTf_OPTIONAL_TERM,                               // ast_listop_exec         (ast_opc_listop)
  0,                                                  // ast_listop_hash_slice   (ast_opc_listop)
  0,                                                  // ast_op_scope            (ast_opc_block)
};

#endif
